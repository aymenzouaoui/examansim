// <auto-generated />
using System;
using EX.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EX.Data.Migrations
{
    [DbContext(typeof(EXContext))]
    [Migration("20240514083524_AYMENZOUAOUI1")]
    partial class AYMENZOUAOUI1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EX.Core.Domain.Client", b =>
                {
                    b.Property<int>("clientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clientId"));

                    b.Property<string>("adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clientId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("EX.Core.Domain.Presation", b =>
                {
                    b.Property<int>("clientFK")
                        .HasColumnType("int");

                    b.Property<int>("prestataireFK")
                        .HasColumnType("int");

                    b.Property<DateTime>("heureDeut")
                        .HasColumnType("datetime2")
                        .HasColumnName("HeureRDV");

                    b.Property<int>("nbHeures")
                        .HasColumnType("int");

                    b.HasKey("clientFK", "prestataireFK", "heureDeut");

                    b.HasIndex("prestataireFK");

                    b.ToTable("presations");
                });

            modelBuilder.Entity("EX.Core.Domain.Prestataire", b =>
                {
                    b.Property<int>("prestataireId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("prestataireId"));

                    b.Property<int>("appreciation")
                        .HasColumnType("int");

                    b.Property<string>("prestataireNom")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("prestatairePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("prestataireTel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("specialiteFK")
                        .HasColumnType("int");

                    b.Property<double>("tarifHoriare")
                        .HasColumnType("float");

                    b.HasKey("prestataireId");

                    b.HasIndex("specialiteFK");

                    b.ToTable("prestataires");
                });

            modelBuilder.Entity("EX.Core.Domain.Specialite", b =>
                {
                    b.Property<int>("code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("code"));

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("intule")
                        .HasColumnType("int");

                    b.HasKey("code");

                    b.ToTable("Specialites");
                });

            modelBuilder.Entity("EX.Core.Domain.Presation", b =>
                {
                    b.HasOne("EX.Core.Domain.Client", "client")
                        .WithMany("presationsC")
                        .HasForeignKey("clientFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EX.Core.Domain.Prestataire", "prestataire")
                        .WithMany("presations")
                        .HasForeignKey("prestataireFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");

                    b.Navigation("prestataire");
                });

            modelBuilder.Entity("EX.Core.Domain.Prestataire", b =>
                {
                    b.HasOne("EX.Core.Domain.Specialite", "specialite")
                        .WithMany("prestataires")
                        .HasForeignKey("specialiteFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("specialite");
                });

            modelBuilder.Entity("EX.Core.Domain.Client", b =>
                {
                    b.Navigation("presationsC");
                });

            modelBuilder.Entity("EX.Core.Domain.Prestataire", b =>
                {
                    b.Navigation("presations");
                });

            modelBuilder.Entity("EX.Core.Domain.Specialite", b =>
                {
                    b.Navigation("prestataires");
                });
#pragma warning restore 612, 618
        }
    }
}
